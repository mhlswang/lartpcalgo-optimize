Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.3.191 Build 20170404

Compiler options: -std=c++11 -O3 -xmic-avx512 -m64 -fopenmp -qopt-report-phase=vec -qopt-report=5 -o gshf-mrqdt3

Begin optimization report for: fgauss(float *, float *, int, int, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(9,3)
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference yd[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.093
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 162 
   remark #15477: vector cost: 14.750 
   remark #15478: estimated potential speedup: 10.240 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 1 
   remark #15487: type converts: 4 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(11,5)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(9,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference yd[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.096
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(11,5)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: dgauss(float *, int, int, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(23,3)
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*npar+j]>, stride is unknown to compiler   [ marqfit.cc(28,7) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*npar+j+1]>, stride is unknown to compiler   [ marqfit.cc(29,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*npar+j]>, stride is unknown to compiler   [ marqfit.cc(29,29) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*npar+j+2]>, stride is unknown to compiler   [ marqfit.cc(30,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*npar+j+1]>, stride is unknown to compiler   [ marqfit.cc(30,24) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.042
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 188 
   remark #15477: vector cost: 26.870 
   remark #15478: estimated potential speedup: 6.540 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 2 
   remark #15487: type converts: 3 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(24,5)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(23,3)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.061
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(24,5)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cal_xi2(float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(40,3)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(41,10) ]
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(41,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.722
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(40,3)
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,10) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,17) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 8
   remark #15309: vectorization support: normalized vectorization overhead 0.732
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 12.300 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(40,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(41,10) ]
   remark #15389: vectorization support: reference res[i] has unaligned access   [ marqfit.cc(41,17) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.722
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: setup_matrix(float *, float *, int, int, float *, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(52,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between beta[j] (53:5) and res[i] (55:7)
   remark #15346: vector dependence: assumed ANTI dependence between res[i] (55:7) and beta[j] (53:5)

   LOOP BEGIN at marqfit.cc(54,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between beta[j] (55:7) and res[i] (55:7)
      remark #15346: vector dependence: assumed ANTI dependence between res[i] (55:7) and beta[j] (55:7)
      remark #15346: vector dependence: assumed ANTI dependence between beta[j] (55:7) and beta[j] (55:7)
      remark #15346: vector dependence: assumed FLOW dependence between beta[j] (55:7) and beta[j] (55:7)
      remark #15346: vector dependence: assumed FLOW dependence between beta[j] (55:7) and beta[j] (55:7)
      remark #15346: vector dependence: assumed ANTI dependence between beta[j] (55:7) and beta[j] (55:7)
   LOOP END

   LOOP BEGIN at marqfit.cc(54,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(60,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between alpha[j*npar+k] (62:7) and alpha[k*npar+j] (66:15)
   remark #15346: vector dependence: assumed OUTPUT dependence between alpha[k*npar+j] (66:15) and alpha[j*npar+k] (62:7)

   LOOP BEGIN at marqfit.cc(61,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between alpha[j*npar+k] (62:7) and alpha[k*npar+j] (66:15)
      remark #15346: vector dependence: assumed OUTPUT dependence between alpha[k*npar+j] (66:15) and alpha[j*npar+k] (62:7)

      LOOP BEGIN at marqfit.cc(63,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between alpha[j*npar+k] (64:9) and dydp[i*npar+j] (64:9)
         remark #15346: vector dependence: assumed ANTI dependence between dydp[i*npar+j] (64:9) and alpha[j*npar+k] (64:9)
         remark #15346: vector dependence: assumed ANTI dependence between alpha[j*npar+k] (64:9) and alpha[j*npar+k] (64:9)
         remark #15346: vector dependence: assumed FLOW dependence between alpha[j*npar+k] (64:9) and alpha[j*npar+k] (64:9)
         remark #15346: vector dependence: assumed FLOW dependence between alpha[j*npar+k] (64:9) and alpha[j*npar+k] (64:9)
         remark #15346: vector dependence: assumed ANTI dependence between alpha[j*npar+k] (64:9) and alpha[j*npar+k] (64:9)
      LOOP END

      LOOP BEGIN at marqfit.cc(63,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: solve_matrix(float *, float *, int, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(78,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(80,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(80,5)
         remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
         remark #15389: vectorization support: reference alpha[i*npar+j] has unaligned access   [ marqfit.cc(81,15) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 4.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(80,5)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
         remark #15389: vectorization support: reference alpha[i*npar+j] has unaligned access   [ marqfit.cc(81,15) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.385
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(86,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(89,5)
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(90,10) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(91,14) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.541
      remark #15300: LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 13 
      remark #15477: vector cost: 3.810 
      remark #15478: estimated potential speedup: 3.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(89,5)
   <Remainder loop for vectorization>
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.099
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7)
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 32
      remark #15309: vectorization support: normalized vectorization overhead 0.810
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15451: unmasked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 0.650 
      remark #15478: estimated potential speedup: 11.150 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(102,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(104,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.537
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at marqfit.cc(104,7)
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.262
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 35 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 11.650 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(104,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.537
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(111,3)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference dp[i] has unaligned access   [ marqfit.cc(112,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.113
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(111,3)
   remark #15389: vectorization support: reference dp[i] has unaligned access   [ marqfit.cc(112,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][npar]>, stride is unknown to compiler   [ marqfit.cc(112,11) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][i]>, stride is unknown to compiler   [ marqfit.cc(112,22) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.041
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 7.620 
   remark #15478: estimated potential speedup: 3.450 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(111,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference dp[i] has unaligned access   [ marqfit.cc(112,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.113
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: mrqdtfit(float &, float *, float *, int, int, float &, float &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(268,3)
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.081
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 3 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 162 
   remark #15477: vector cost: 14.620 
   remark #15478: estimated potential speedup: 10.340 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 1 
   remark #15487: type converts: 4 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(268,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(268,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.099
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(268,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(40,3) inlined into marqfit.cc(269,10)
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,10) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,17) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 8
   remark #15309: vectorization support: normalized vectorization overhead 0.554
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 12.970 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(40,3) inlined into marqfit.cc(269,10)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,10) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,17) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 2.688
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(23,3) inlined into marqfit.cc(270,3)
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(28,7) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j+1]>, stride is unknown to compiler   [ marqfit.cc(29,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(29,29) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j+2]>, stride is unknown to compiler   [ marqfit.cc(30,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j+1]>, stride is unknown to compiler   [ marqfit.cc(30,24) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.042
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 188 
   remark #15477: vector cost: 26.810 
   remark #15478: estimated potential speedup: 6.550 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 2 
   remark #15487: type converts: 3 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(24,5) inlined into marqfit.cc(270,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(23,3) inlined into marqfit.cc(270,3)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.061
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(24,5) inlined into marqfit.cc(270,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
   <Distributed chunk1>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(53,5) ]
      remark #15305: vectorization support: vector length 16
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 10.660 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
   <Remainder loop for vectorization, Distributed chunk1>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(53,5) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.333
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(54,5) inlined into marqfit.cc(271,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.250
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 2 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 19.200 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.645
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(54,5) inlined into marqfit.cc(271,3)
<Remainder, Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 0.500 
      remark #15478: estimated potential speedup: 20.120 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(271,3)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.889
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(60,3) inlined into marqfit.cc(271,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(61,5) inlined into marqfit.cc(271,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(63,7) inlined into marqfit.cc(271,3)
         remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(64,26) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+k]>, stride is unknown to compiler   [ marqfit.cc(64,41) ]
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 8
         remark #15309: vectorization support: normalized vectorization overhead 0.041
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 5.870 
         remark #15478: estimated potential speedup: 1.140 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(63,7) inlined into marqfit.cc(271,3)
      <Remainder loop for vectorization>
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.417
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(274,5)
   remark #15415: vectorization support: non-unit strided load was generated for the variable <alpha[j*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(275,10) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.596
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 1.620 
   remark #15478: estimated potential speedup: 4.350 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(274,5)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.303
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(279,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between alpha[j*nParam+j] (280:5) and alpha[j*nParam+j] (281:5)
   remark #15346: vector dependence: assumed FLOW dependence between alpha[j*nParam+j] (281:5) and alpha[j*nParam+j] (280:5)
LOOP END

LOOP BEGIN at marqfit.cc(279,3)
<Remainder>
LOOP END

LOOP BEGIN at marqfit.cc(78,3) inlined into marqfit.cc(283,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(283,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(283,3)
         remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
         remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(81,15) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 4.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(283,3)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
         remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(81,15) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.385
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(86,3) inlined into marqfit.cc(283,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(89,5) inlined into marqfit.cc(283,3)
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(90,10) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(91,14) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.541
      remark #15300: LOOP WAS VECTORIZED
      remark #15452: unmasked strided loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 13 
      remark #15477: vector cost: 3.810 
      remark #15478: estimated potential speedup: 3.030 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(89,5) inlined into marqfit.cc(283,3)
   <Remainder loop for vectorization>
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.099
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(283,3)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(283,3)
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 32
      remark #15309: vectorization support: normalized vectorization overhead 0.810
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15451: unmasked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 0.650 
      remark #15478: estimated potential speedup: 11.150 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(283,3)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
      remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
      remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(102,5) inlined into marqfit.cc(283,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(283,3)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.537
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(283,3)
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.262
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 35 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 11.650 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(283,3)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
         remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.537
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(111,3) inlined into marqfit.cc(283,3)
   remark #15388: vectorization support: reference dp[i] has aligned access   [ marqfit.cc(112,5) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][nParam]>, stride is unknown to compiler   [ marqfit.cc(112,11) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][i]>, stride is unknown to compiler   [ marqfit.cc(112,22) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 7.620 
   remark #15478: estimated potential speedup: 3.810 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(111,3) inlined into marqfit.cc(283,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference dp[i] has aligned access   [ marqfit.cc(112,5) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.092
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(75,32) inlined into marqfit.cc(309,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(289,5)
      remark #15388: vectorization support: reference psav[j] has aligned access   [ marqfit.cc(290,7) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(290,17) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(291,7) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(291,14) ]
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(291,21) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 32
      remark #15309: vectorization support: normalized vectorization overhead 0.316
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 0.590 
      remark #15478: estimated potential speedup: 15.340 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(289,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference psav[j] has aligned access   [ marqfit.cc(290,7) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(290,17) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(291,7) ]
      remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(291,14) ]
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(291,21) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.333
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(293,5)
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
      remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.081
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 3 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 162 
      remark #15477: vector cost: 14.620 
      remark #15478: estimated potential speedup: 10.340 
      remark #15482: vectorized math library calls: 1 
      remark #15486: divides: 1 
      remark #15487: type converts: 4 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(293,5)
         remark #25460: No loop optimizations reported
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(293,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
      remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
      remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.099
      remark #15301: REMAINDER LOOP WAS VECTORIZED

      LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(293,5)
         remark #25460: No loop optimizations reported
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(40,3) inlined into marqfit.cc(294,14)
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,10) ]
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,17) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 8
      remark #15309: vectorization support: normalized vectorization overhead 0.554
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 0.430 
      remark #15478: estimated potential speedup: 12.970 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(40,3) inlined into marqfit.cc(294,14)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,10) ]
      remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(41,17) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 2.688
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(297,5)
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(298,14) ]
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(298,28) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(298,34) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.455
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 12 
      remark #15477: vector cost: 0.680 
      remark #15478: estimated potential speedup: 14.280 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(297,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(298,14) ]
      remark #15388: vectorization support: reference dp[j] has aligned access   [ marqfit.cc(298,28) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(298,34) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.913
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(302,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(302,7)
         remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(302,29) ]
         remark #15388: vectorization support: reference psav[j] has aligned access   [ marqfit.cc(302,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.310 
         remark #15478: estimated potential speedup: 5.330 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(302,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference p[j] has unaligned access   [ marqfit.cc(302,29) ]
         remark #15388: vectorization support: reference psav[j] has aligned access   [ marqfit.cc(302,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.250
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(306,7)
      remark #15388: vectorization support: reference alpsav[j] has aligned access   [ marqfit.cc(307,27) ]
      remark #15416: vectorization support: non-unit strided store was generated for the variable <alpha[j*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(307,9) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.016
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 1.930 
      remark #15478: estimated potential speedup: 2.890 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(306,7)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference alpsav[j] has aligned access   [ marqfit.cc(307,27) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.333
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(78,3) inlined into marqfit.cc(309,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(309,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(309,7)
            remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
            remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(81,15) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 0.370 
            remark #15478: estimated potential speedup: 4.000 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at marqfit.cc(80,5) inlined into marqfit.cc(309,7)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference h[i][j] has unaligned access   [ marqfit.cc(81,7) ]
            remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(81,15) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.385
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(86,3) inlined into marqfit.cc(309,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(89,5) inlined into marqfit.cc(309,7)
         remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(90,10) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <h[j][i]>, stride is unknown to compiler   [ marqfit.cc(91,14) ]
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.541
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 13 
         remark #15477: vector cost: 3.810 
         remark #15478: estimated potential speedup: 3.030 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(89,5) inlined into marqfit.cc(309,7)
      <Remainder loop for vectorization>
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.099
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(309,7)
      <Peeled loop for vectorization>
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.240
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(309,7)
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 0.810
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 10 
         remark #15477: vector cost: 0.650 
         remark #15478: estimated potential speedup: 11.150 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(96,7) inlined into marqfit.cc(309,7)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(97,14) ]
         remark #15389: vectorization support: reference h[i][k] has unaligned access   [ marqfit.cc(98,2) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(98,10) ]
         remark #15389: vectorization support: reference h[imax][k] has unaligned access   [ marqfit.cc(99,2) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.240
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at marqfit.cc(102,5) inlined into marqfit.cc(309,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(309,7)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.537
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(309,7)
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.262
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 35 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 11.650 
            remark #15486: divides: 1 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at marqfit.cc(104,7) inlined into marqfit.cc(309,7)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[j][k+1] has unaligned access   [ marqfit.cc(105,9) ]
            remark #15389: vectorization support: reference h[i][k+1] has unaligned access   [ marqfit.cc(105,20) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.537
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(111,3) inlined into marqfit.cc(309,7)
      remark #15388: vectorization support: reference dp[i] has aligned access   [ marqfit.cc(112,5) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][nParam]>, stride is unknown to compiler   [ marqfit.cc(112,11) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <h[i][i]>, stride is unknown to compiler   [ marqfit.cc(112,22) ]
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 31 
      remark #15477: vector cost: 7.620 
      remark #15478: estimated potential speedup: 3.810 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(111,3) inlined into marqfit.cc(309,7)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference dp[i] has aligned access   [ marqfit.cc(112,5) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.092
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: invrt_matrix(float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(150,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(152,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (157:2) and alpha[i*npar+j] (160:6)
      remark #15346: vector dependence: assumed ANTI dependence between alpha[i*npar+j] (160:6) and alpha[i*npar+j] (157:2)

      LOOP BEGIN at marqfit.cc(153,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between aMax (159:4) and aMax (160:6)
         remark #15346: vector dependence: assumed FLOW dependence between aMax (160:6) and aMax (159:4)
         remark #15346: vector dependence: assumed FLOW dependence between aMax (160:6) and aMax (159:4)
         remark #15346: vector dependence: assumed ANTI dependence between aMax (159:4) and aMax (160:6)
      LOOP END

      LOOP BEGIN at marqfit.cc(153,7)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(171,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between alpha[k*npar+j] (174:4) and alpha[i*npar+j] (176:4)
      remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (176:4) and alpha[k*npar+j] (174:4)
   LOOP END

   LOOP BEGIN at marqfit.cc(171,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at marqfit.cc(171,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at marqfit.cc(171,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at marqfit.cc(182,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between alpha[i*npar+k] (185:4) and alpha[i*npar+j] (187:4)
      remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (187:4) and alpha[i*npar+k] (185:4)
   LOOP END

   LOOP BEGIN at marqfit.cc(182,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at marqfit.cc(182,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at marqfit.cc(182,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at marqfit.cc(191,5)
      remark #15416: vectorization support: non-unit strided store was generated for the variable <alpha[i*npar+k]>, masked, stride is unknown to compiler   [ marqfit.cc(192,19) ]
      remark #15415: vectorization support: non-unit strided load was generated for the variable <alpha[i*npar+k]>, masked, stride is unknown to compiler   [ marqfit.cc(192,38) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.038
      remark #15300: LOOP WAS VECTORIZED
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 11.500 
      remark #15478: estimated potential speedup: 1.700 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(191,5)
   <Remainder loop for vectorization>
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.190
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(191,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at marqfit.cc(194,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between alpha[i*npar+j] (196:26) and alpha[i*npar+j] (196:26)
      remark #15346: vector dependence: assumed OUTPUT dependence between alpha[i*npar+j] (196:26) and alpha[i*npar+j] (196:26)

      LOOP BEGIN at marqfit.cc(195,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (196:26) and alpha[k*npar+j] (196:26)
         remark #15346: vector dependence: assumed ANTI dependence between alpha[k*npar+j] (196:26) and alpha[i*npar+j] (196:26)
      LOOP END

      LOOP BEGIN at marqfit.cc(195,7)
      <Remainder>
      LOOP END

      LOOP BEGIN at marqfit.cc(195,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (196:26) and alpha[k*npar+j] (196:26)
         remark #15346: vector dependence: assumed ANTI dependence between alpha[k*npar+j] (196:26) and alpha[i*npar+j] (196:26)
      LOOP END

      LOOP BEGIN at marqfit.cc(195,7)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference alpha[k*npar+j] has unaligned access   [ marqfit.cc(200,20) ]
      remark #15389: vectorization support: reference alpha[k*npar+j] has unaligned access   [ marqfit.cc(200,38) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.388
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,20) ]
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,38) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.157
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 30 
      remark #15477: vector cost: 4.370 
      remark #15478: estimated potential speedup: 6.370 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,20) ]
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,38) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.283
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference alpha[k*npar+j] has unaligned access   [ marqfit.cc(200,20) ]
      remark #15389: vectorization support: reference alpha[k*npar+j] has unaligned access   [ marqfit.cc(200,38) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.388
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,20) ]
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,38) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.157
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 30 
      remark #15477: vector cost: 4.370 
      remark #15478: estimated potential speedup: 6.370 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(199,5)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,20) ]
      remark #15388: vectorization support: reference alpha[k*npar+j] has aligned access   [ marqfit.cc(200,38) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.283
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(207,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at marqfit.cc(210,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between alpha[i*npar+k] (211:4) and alpha[i*npar+j] (213:4)
      remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (213:4) and alpha[i*npar+k] (211:4)
   LOOP END

   LOOP BEGIN at marqfit.cc(210,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at marqfit.cc(210,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at marqfit.cc(210,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at marqfit.cc(218,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between alpha[k*npar+j] (219:4) and alpha[i*npar+j] (221:4)
      remark #15346: vector dependence: assumed FLOW dependence between alpha[i*npar+j] (221:4) and alpha[k*npar+j] (219:4)
   LOOP END

   LOOP BEGIN at marqfit.cc(218,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at marqfit.cc(218,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at marqfit.cc(218,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cal_perr(float *, float *, int, int, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(240,3)
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.081
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 3 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 162 
   remark #15477: vector cost: 14.620 
   remark #15478: estimated potential speedup: 10.340 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 1 
   remark #15487: type converts: 4 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(240,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(9,3) inlined into marqfit.cc(240,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(10,5) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,7) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(12,15) ]
   remark #15388: vectorization support: reference res[i] has aligned access   [ marqfit.cc(15,5) ]
   remark #15389: vectorization support: reference y[i] has unaligned access   [ marqfit.cc(15,12) ]
   remark #15388: vectorization support: reference yf[i] has aligned access   [ marqfit.cc(15,18) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.099
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(11,5) inlined into marqfit.cc(240,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(23,3) inlined into marqfit.cc(241,3)
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(28,7) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j+1]>, stride is unknown to compiler   [ marqfit.cc(29,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(29,29) ]
   remark #15416: vectorization support: non-unit strided store was generated for the variable <dydp[i*nParam+j+2]>, stride is unknown to compiler   [ marqfit.cc(30,7) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j+1]>, stride is unknown to compiler   [ marqfit.cc(30,24) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.042
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 188 
   remark #15477: vector cost: 26.810 
   remark #15478: estimated potential speedup: 6.550 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 2 
   remark #15487: type converts: 3 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at marqfit.cc(24,5) inlined into marqfit.cc(241,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(23,3) inlined into marqfit.cc(241,3)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.061
   remark #15301: REMAINDER LOOP WAS VECTORIZED

   LOOP BEGIN at marqfit.cc(24,5) inlined into marqfit.cc(241,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
   <Distributed chunk1>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(53,5) ]
      remark #15305: vectorization support: vector length 16
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.180 
      remark #15478: estimated potential speedup: 10.660 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
   <Remainder loop for vectorization, Distributed chunk1>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(53,5) ]
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 1.333
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(54,5) inlined into marqfit.cc(242,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.250
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 2 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 1.000 
      remark #15478: estimated potential speedup: 19.200 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.645
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(54,5) inlined into marqfit.cc(242,3)
<Remainder, Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.500
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 0.500 
      remark #15478: estimated potential speedup: 20.120 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at marqfit.cc(52,3) inlined into marqfit.cc(242,3)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15388: vectorization support: reference beta[j] has aligned access   [ marqfit.cc(55,7) ]
      remark #15389: vectorization support: reference dydp[i*nParam+j] has unaligned access   [ marqfit.cc(55,23) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.889
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(60,3) inlined into marqfit.cc(242,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(61,5) inlined into marqfit.cc(242,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(63,7) inlined into marqfit.cc(242,3)
         remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+j]>, stride is unknown to compiler   [ marqfit.cc(64,26) ]
         remark #15415: vectorization support: non-unit strided load was generated for the variable <dydp[i*nParam+k]>, stride is unknown to compiler   [ marqfit.cc(64,41) ]
         remark #15305: vectorization support: vector length 16
         remark #15399: vectorization support: unroll factor set to 8
         remark #15309: vectorization support: normalized vectorization overhead 0.041
         remark #15300: LOOP WAS VECTORIZED
         remark #15452: unmasked strided loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 5.870 
         remark #15478: estimated potential speedup: 1.140 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(63,7) inlined into marqfit.cc(242,3)
      <Remainder loop for vectorization>
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.417
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(243,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at marqfit.cc(244,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at marqfit.cc(244,5)
         remark #15389: vectorization support: reference alpsav[i][j] has unaligned access   [ marqfit.cc(245,7) ]
         remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(245,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.000
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 4.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at marqfit.cc(244,5)
      <Remainder loop for vectorization>
         remark #15389: vectorization support: reference alpsav[i][j] has unaligned access   [ marqfit.cc(245,7) ]
         remark #15389: vectorization support: reference alpha[i*nParam+j] has unaligned access   [ marqfit.cc(245,20) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 1.385
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at marqfit.cc(251,3)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference perr[i] has unaligned access   [ marqfit.cc(253,7) ]
   remark #15389: vectorization support: reference perr[i] has unaligned access   [ marqfit.cc(255,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.145
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at marqfit.cc(251,3)
   remark #15389: vectorization support: reference perr[i] has unaligned access   [ marqfit.cc(253,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: non-unit strided load was generated for the variable <alpha[i*nParam+i]>, stride is unknown to compiler   [ marqfit.cc(252,8) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <alpha[i*nParam+i]>, stride is unknown to compiler   [ marqfit.cc(255,15) ]
   remark #15415: vectorization support: non-unit strided load was generated for the variable <alpha[i*nParam+i]>, stride is unknown to compiler   [ marqfit.cc(253,20) ]
   remark #15305: vectorization support: vector length 16
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.046
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 6.810 
   remark #15478: estimated potential speedup: 4.730 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at marqfit.cc(251,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference perr[i] has unaligned access   [ marqfit.cc(253,7) ]
   remark #15389: vectorization support: reference perr[i] has unaligned access   [ marqfit.cc(255,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.145
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================
